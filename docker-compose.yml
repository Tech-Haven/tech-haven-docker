version: '3.6'
services:
  nginx:
    container_name: nginx01
    image: nginx:alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/config.conf:/etc/nginx/conf.d/config.conf
      - ./nginx/var/log/nginx:/var/log/nginx
      - ./control.thetechhaven.com/client/build:/var/www/control.thetechhaven.com/html
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    networks:
      - frontend
      - backend 
    restart: always
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - backend
  api:
    container_name: api01
    build: .
    depends_on:
      - mongodb
    environment:
      PORT: ${PORT}
      MONGO_URI: ${MONGO_URI}
      REDIRECT_URI: ${REDIRECT_URI}
      DASHBOARD_URI: ${DASHBOARD_URI}
      SCOPE: ${SCOPE}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      BOT_TOKEN: ${BOT_TOKEN}
      PREFIX: ${PREFIX}
      GUILD_ID: ${GUILD_ID}
      NODE_ENV: production
    ports:
      - '5000:5000'
    volumes:
      - nodejs:/usr/src/app
    networks:
      - frontend
      - backend
    restart: always
  mongodb:
    container_name: mongodb01
    image: mongo
    volumes:
      - mongodb:/data/configdb
      - mongodb:/data/db
    networks:
      - backend
networks:
  frontend:
    driver: bridge
    ipam:
     config:
       - subnet: 172.16.198.0/24
  backend:
    driver: bridge
    internal: true
    ipam:
     config:
       - subnet: 172.16.199.0/24
volumes:
  nodejs:
  mongodb:
